# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/
exercise-files/Chapter 1/01-01/done/app.py
exercise-files/Chapter 1/01-02/begin/app.py
exercise-files/Chapter 1/01-02/done/app.py
exercise-files/Chapter 1/01-03/begin/app.py
exercise-files/Chapter 1/01-03/done/app.py
exercise-files/Chapter 1/01-04/begin/app.py
exercise-files/Chapter 1/01-04/done/app.py
exercise-files/Chapter 1/01-05/begin/app.py
exercise-files/Chapter 1/01-05/done/app.py
exercise-files/Chapter 2/02-01/begin/app.py
exercise-files/Chapter 2/02-01/done/app.py
exercise-files/Chapter 2/02-02/begin/app.py
exercise-files/Chapter 2/02-02/done/app.py
exercise-files/Chapter 2/02-03/begin/app.py
exercise-files/Chapter 2/02-03/done/app.py
exercise-files/Chapter 2/02-04/begin/app.py
exercise-files/Chapter 2/02-04/done/app.py
exercise-files/Chapter 3/03-01/begin/app.py
exercise-files/Chapter 3/03-01/done/app.py
exercise-files/Chapter 3/03-02/begin/app.py
exercise-files/Chapter 3/03-02/done/app.py
exercise-files/Chapter 3/03-03/begin/app.py
exercise-files/Chapter 3/03-03/done/app.py
exercise-files/Chapter 3/03-04/begin/app.py
exercise-files/Chapter 3/03-04/done/app.py
exercise-files/Chapter 3/03-05/begin/app.py
exercise-files/Chapter 3/03-05/done/app.py
exercise-files/Chapter 3/03-05/done/planets.db
exercise-files/Chapter 3/03-06/begin/app.py
exercise-files/Chapter 3/03-06/begin/planets.db
exercise-files/Chapter 3/03-06/done/app.py
exercise-files/Chapter 3/03-06/done/planets.db
exercise-files/Chapter 3/03-07/begin/app.py
exercise-files/Chapter 3/03-07/begin/planets.db
exercise-files/Chapter 3/03-07/done/app.py
exercise-files/Chapter 3/03-07/done/planets.db
exercise-files/Chapter 4/04-01/begin/app.py
exercise-files/Chapter 4/04-01/begin/planets.db
exercise-files/Chapter 4/04-02/begin/app.py
exercise-files/Chapter 4/04-02/begin/planets.db
exercise-files/Chapter 4/04-02/done/app.py
exercise-files/Chapter 4/04-02/done/planets.db
exercise-files/Chapter 4/04-03/begin/app.py
exercise-files/Chapter 4/04-03/begin/planets.db
exercise-files/Chapter 4/04-03/done/app.py
exercise-files/Chapter 4/04-03/done/planets.db
exercise-files/Chapter 4/04-04/begin/app.py
exercise-files/Chapter 4/04-04/begin/planets.db
exercise-files/Chapter 4/04-04/done/app.py
exercise-files/Chapter 4/04-04/done/planets.db
exercise-files/Chapter 4/04-05/begin/app.py
exercise-files/Chapter 4/04-05/begin/planets.db
exercise-files/Chapter 4/04-05/done/app.py
exercise-files/Chapter 4/04-05/done/planets.db
exercise-files/Chapter 5/05-01/begin/app.py
exercise-files/Chapter 5/05-01/begin/planets.db
exercise-files/Chapter 5/05-01/done/app.py
exercise-files/Chapter 5/05-01/done/planets.db
exercise-files/Chapter 5/05-02/begin/app.py
exercise-files/Chapter 5/05-02/begin/planets.db
exercise-files/Chapter 5/05-02/done/app.py
exercise-files/Chapter 5/05-02/done/planets.db
exercise-files/Chapter 5/05-03/begin/app.py
exercise-files/Chapter 5/05-03/begin/planets.db
exercise-files/Chapter 5/05-03/done/app.py
exercise-files/Chapter 5/05-03/done/planets.db
exercise-files/Chapter 5/05-04/begin/app.py
exercise-files/Chapter 5/05-04/begin/planets.db
exercise-files/Chapter 5/05-04/done/app.py
exercise-files/Chapter 5/05-04/done/planets.db
exercise-files/Chapter 5/05-05/begin/app.py
exercise-files/Chapter 5/05-05/begin/planets.db
exercise-files/Chapter 5/05-05/done/app.py
exercise-files/Chapter 5/05-05/done/planets.db
exercise-files/Chapter 6/06-01/begin/app.py
exercise-files/Chapter 6/06-01/begin/planets.db
exercise-files/Chapter 6/06-01/done/app.py
exercise-files/Chapter 6/06-01/done/planets.db
exercise-files/Chapter 6/06-01/done/requirements.txt
videos/0. Introduction/01. RESTful APIs with Python 3 and Flask.mp4
videos/0. Introduction/02. What you should know.mp4
videos/0. Introduction/03. Using the exercise files.mp4
videos/0. Introduction/04. Demo project overview.mp4
videos/1. Getting Started/01. Creating a new Flask project in PyCharm.mp4
videos/1. Getting Started/02. Making a super-simple API example.mp4
videos/1. Getting Started/03. Setting up a run configuration.mp4
videos/1. Getting Started/04. Testing with Postman.mp4
videos/1. Getting Started/05. Restarting your server.mp4
videos/2. Perfecting the Returned Data/01. Returning JSON instead of text.mp4
videos/2. Perfecting the Returned Data/02. HTTP status codes.mp4
videos/2. Perfecting the Returned Data/03. URL parameters.mp4
videos/2. Perfecting the Returned Data/04. URL variables and conversion filters.mp4
videos/3. Working With Databases/01. Adding an ORM SQLAlchemy.mp4
videos/3. Working With Databases/02. Setting up SQLAlchemy.mp4
videos/3. Working With Databases/03. Creating the ORM model classes.mp4
videos/3. Working With Databases/04. Seeding the database with the Flask CLI.mp4
videos/3. Working With Databases/05. Viewing the database in DB Browser for SQLite.mp4
videos/3. Working With Databases/06. Retrieving a list of planets from the database.mp4
videos/3. Working With Databases/07. Serializing SQLAlchemy results with Marshmallow.mp4
videos/4. API Security/01. JSON Web Tokens.mp4
videos/4. API Security/02. Registering new users.mp4
videos/4. API Security/03. Authenticating users and passing the token.mp4
videos/4. API Security/04. Setting up email.mp4
videos/4. API Security/05. Emailing a lost password.mp4
videos/5. Create Read Update and Delete/01. Retrieving a single planets details.mp4
videos/5. Create Read Update and Delete/02. Adding planets with a POST method.mp4
videos/5. Create Read Update and Delete/03. Securing the add planet endpoint.mp4
videos/5. Create Read Update and Delete/04. Updating a planet using a PUT method.mp4
videos/5. Create Read Update and Delete/05. Deleting a planet with DEL.mp4
videos/6. Finishing Touches/01. Exporting your projects requirements file.mp4
videos/6. Finishing Touches/02. Conclusion.mp4
